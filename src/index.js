/*
 * Brainrex API
 * Provides anomaly detection and natural language processing technlogies to blockchain developers.
 *
 * OpenAPI spec version: 1.0.1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.10
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/CandleRequest', 'model/CandleResponse', 'model/Error', 'model/Exchange', 'model/ExchangeAssetsResponse', 'model/ExchangeAssetsResponseInner', 'model/OHCLV', 'model/OrderbookRequest', 'model/OrderbookResponse', 'model/PointTimeSeries', 'model/SeriesResponse', 'model/SeriesResponsePoint', 'model/SupportedExchanges', 'model/Text', 'model/TickerResponse', 'model/TickerResponseInner', 'model/TimeSeries', 'api/AnomalyApi', 'api/IntegrationsApi', 'api/LanguageApi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/CandleRequest'), require('./model/CandleResponse'), require('./model/Error'), require('./model/Exchange'), require('./model/ExchangeAssetsResponse'), require('./model/ExchangeAssetsResponseInner'), require('./model/OHCLV'), require('./model/OrderbookRequest'), require('./model/OrderbookResponse'), require('./model/PointTimeSeries'), require('./model/SeriesResponse'), require('./model/SeriesResponsePoint'), require('./model/SupportedExchanges'), require('./model/Text'), require('./model/TickerResponse'), require('./model/TickerResponseInner'), require('./model/TimeSeries'), require('./api/AnomalyApi'), require('./api/IntegrationsApi'), require('./api/LanguageApi'));
  }
}(function(ApiClient, CandleRequest, CandleResponse, Error, Exchange, ExchangeAssetsResponse, ExchangeAssetsResponseInner, OHCLV, OrderbookRequest, OrderbookResponse, PointTimeSeries, SeriesResponse, SeriesResponsePoint, SupportedExchanges, Text, TickerResponse, TickerResponseInner, TimeSeries, AnomalyApi, IntegrationsApi, LanguageApi) {
  'use strict';

  /**
   * Client Library for the Brainrex API. This API provides anomaly detection, language understanding and data integrations to the blockchain development community..<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var Brainrex = require('index'); // See note below*.
   * var xxxSvc = new Brainrex.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new Brainrex.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new Brainrex.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new Brainrex.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 1.0.0
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The CandleRequest model constructor.
     * @property {module:model/CandleRequest}
     */
    CandleRequest: CandleRequest,
    /**
     * The CandleResponse model constructor.
     * @property {module:model/CandleResponse}
     */
    CandleResponse: CandleResponse,
    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error: Error,
    /**
     * The Exchange model constructor.
     * @property {module:model/Exchange}
     */
    Exchange: Exchange,
    /**
     * The ExchangeAssetsResponse model constructor.
     * @property {module:model/ExchangeAssetsResponse}
     */
    ExchangeAssetsResponse: ExchangeAssetsResponse,
    /**
     * The ExchangeAssetsResponseInner model constructor.
     * @property {module:model/ExchangeAssetsResponseInner}
     */
    ExchangeAssetsResponseInner: ExchangeAssetsResponseInner,
    /**
     * The OHCLV model constructor.
     * @property {module:model/OHCLV}
     */
    OHCLV: OHCLV,
    /**
     * The OrderbookRequest model constructor.
     * @property {module:model/OrderbookRequest}
     */
    OrderbookRequest: OrderbookRequest,
    /**
     * The OrderbookResponse model constructor.
     * @property {module:model/OrderbookResponse}
     */
    OrderbookResponse: OrderbookResponse,
    /**
     * The PointTimeSeries model constructor.
     * @property {module:model/PointTimeSeries}
     */
    PointTimeSeries: PointTimeSeries,
    /**
     * The SeriesResponse model constructor.
     * @property {module:model/SeriesResponse}
     */
    SeriesResponse: SeriesResponse,
    /**
     * The SeriesResponsePoint model constructor.
     * @property {module:model/SeriesResponsePoint}
     */
    SeriesResponsePoint: SeriesResponsePoint,
    /**
     * The SupportedExchanges model constructor.
     * @property {module:model/SupportedExchanges}
     */
    SupportedExchanges: SupportedExchanges,
    /**
     * The Text model constructor.
     * @property {module:model/Text}
     */
    Text: Text,
    /**
     * The TickerResponse model constructor.
     * @property {module:model/TickerResponse}
     */
    TickerResponse: TickerResponse,
    /**
     * The TickerResponseInner model constructor.
     * @property {module:model/TickerResponseInner}
     */
    TickerResponseInner: TickerResponseInner,
    /**
     * The TimeSeries model constructor.
     * @property {module:model/TimeSeries}
     */
    TimeSeries: TimeSeries,
    /**
     * The AnomalyApi service constructor.
     * @property {module:api/AnomalyApi}
     */
    AnomalyApi: AnomalyApi,
    /**
     * The IntegrationsApi service constructor.
     * @property {module:api/IntegrationsApi}
     */
    IntegrationsApi: IntegrationsApi,
    /**
     * The LanguageApi service constructor.
     * @property {module:api/LanguageApi}
     */
    LanguageApi: LanguageApi
  };

  return exports;
}));
